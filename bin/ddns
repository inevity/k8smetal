#!/bin/bash

#### Alpha env default #####
BIN=/usr/local/ddns/bin/ddns.bin
LOG_DIR=/var/log/ddns
LOG_FILE=$LOG_DIR/ddns.log
ERR_LOG_FILE=$LOG_DIR/ddns.error.log

MDATA=/usr/local/ddns
CONFIG=config.ini.custom

mkdir -p $LOG_DIR

# check BIN exist.
if [ ! -f $BIN ];then
  echo "$BIN not exist."
  exit 3
fi
CMD="$BIN
    --configUpdateInterval=10s
    --log_file=$LOG_FILE
    --error_log_file=$ERR_LOG_FILE
    --config $MDATA/$CONFIG"
checkOnce() {
  pnum=`ps -ef |grep "$BIN"|grep -c $CONFIG`
  [ $pnum -eq 1 ]
  return $?
}
check() {
  for (( c=1; c<=5; c++ ))
  do
    sleep 1
    checkOnce
    if [ $? -eq 0 ];then
      return 0
    fi
  done
  return 1
}
start() {
  ulimit -n 655350
  #ulimit -n unlimited
  # clear log...
  #rm $LOG_FILE
  # open gctrace.
  #export GODEBUG=gctrace=1
  #export GOTRACEBACK=crash
  echo $CMD
  checkOnce
  if [ $? -eq 0 ];then
    echo "It's already run."
    return 0
  fi
  nohup $CMD &
  check
  if [ $? -eq 0 ];then
      echo "Start Finish."
      return 0
  else
      echo "Start Fail."
      return 2
  fi
}
stop() {
  checkOnce
  if [ $? -eq 0 ];then
    pid=`ps -ef |grep "$BIN"|grep $CONFIG|awk '{print $2}'`
    kill -9 $pid
    echo "Stop: `basename $BIN`  $CONFIG PID:$pid"
  else
    echo "Process Not exist. `basename $BIN` port: $HPORT"
  fi
}
status() {
  checkOnce
  if [ $? -eq 0 ];then
    echo "It's OK."
    return 0
  else
    echo "It's Gone."
    return 1
  fi
}

startDirect() {
  echo $CMD
  exec gosu root $CMD
}
Usage="Usage:`basename $0` [start|stop|restart|status|stdout]"
if [ $# -ne 1 ];then
  #echo $Usage
  start
  exit $?
fi

if [ $1 == "start" ];then
  start
elif [ $1 == "stop" ];then
  stop
elif [ $1 == "restart" ];then
  stop
  start
elif [ $1 == "status" ];then
  status
elif [ $1 == "stdout" ];then
  startDirect
else
  echo $Usage
  exit 2
fi
exec "$@"
